# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FEWHi33W8sutZ4DUBfLiFTa5f8S7y_Fg
"""

import streamlit as st
import numpy as np
import joblib

# Load the saved model
model = joblib.load("best_diabetes_model.sav")

# Set up the Streamlit app
st.title("Diabetes Prediction App")

# Input fields for user data
st.sidebar.header("Input Features")

# Create input fields for each feature
pregnancies = st.sidebar.number_input("Pregnancies", min_value=0, max_value=20, step=1)
glucose = st.sidebar.number_input("Glucose Level", min_value=0, max_value=300)
blood_pressure = st.sidebar.number_input("Blood Pressure", min_value=0, max_value=180)
skin_thickness = st.sidebar.number_input("Skin Thickness", min_value=0, max_value=100)
insulin = st.sidebar.number_input("Insulin Level", min_value=0, max_value=900)
bmi = st.sidebar.number_input("BMI", min_value=0.0, max_value=100.0)
diabetes_pedigree = st.sidebar.number_input("Diabetes Pedigree Function", min_value=0.0, max_value=5.0, step=0.01)
age = st.sidebar.number_input("Age", min_value=0, max_value=120, step=1)

# Create a button to make predictions
if st.sidebar.button("Predict"):
    # Create an array of input values
    input_data = np.array([[pregnancies, glucose, blood_pressure, skin_thickness, insulin, bmi, diabetes_pedigree, age]])

    # Make prediction
    prediction = model.predict(input_data)

    # Display the result
    if prediction == 1:
        st.write("The model predicts that the individual **has diabetes**.")
    else:
        st.write("The model predicts that the individual **does not have diabetes**.")